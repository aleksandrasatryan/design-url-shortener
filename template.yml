AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: URL Shortener

Parameters:
  ApplicationName:
    Type: String
    Default: 'url-shortener'

Resources:
  ApiGatewayLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join [ '/', [ '/aws/apigateway', !Ref ApplicationName ] ]
      RetentionInDays: 1

  ApiGateway:
    Type: AWS::Serverless::Api
    DependsOn: 'ApiGatewayLogGroup'
    Properties:
      StageName: dev
      Name: !Ref ApplicationName
      EndpointConfiguration:
        Type: REGIONAL
#      AccessLogSetting:
#        DestinationArn: !GetAtt ApiGatewayLogGroup.Arn
#        Format: '{"sourceIp":"$context.identity.sourceIp","caller":"$context.identity.caller","user":"$context.identity.user","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath","protocol":"$context.protocol","status":"$context.status","responseLatency":"$context.responseLatency","requestId":"$context.requestId"}'

  ApiUsagePlan:
    Type: "AWS::ApiGateway::UsagePlan"
    DependsOn: 'ApiGateway'
    Properties:
      ApiStages:
        - ApiId: !Ref ApiGateway
          Stage: dev
      Quota:
        Limit: 100
        Period: DAY
      UsagePlanName: "ApiUsagePlan"

  ApiLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: aleksandr-lambda-dev-build
        Key: url-shortener-1.0.jar
      Handler: com.aleksandr.shortener.infrastructure.lambda.ApiCalledHandler::handleRequest
      FunctionName: !Ref ApplicationName
      Architectures:
        - x86_64
      Runtime: java21
      Timeout: 30
      MemorySize: 1024
      AutoPublishAlias: live
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - apigateway:POST
                - apigateway:GET
                - dynamodb:BatchWriteItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
                - dynamodb:GetItem
                - dynamodb:Query
              Resource:
                - '*'
      Events:
        HealthCheck:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /v1/health
            Method: get
        ShortenURL:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /v1/shorten
            Method: post
        GetLongURL:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /{id}
            Method: get

  ApiLambdaFunctionLogGroup:
    Type: 'AWS::Logs::LogGroup'
    DependsOn: 'ApiLambdaFunction'
    Properties:
      RetentionInDays: 1
      LogGroupName: !Join [ '', [ '/aws/lambda/', !Ref ApiLambdaFunction ] ]

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: 'ShortUrl'
      BillingMode: 'PAY_PER_REQUEST'
      AttributeDefinitions:
        - AttributeName: 'id'
          AttributeType: 'S'
        - AttributeName: 'longUrl'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'id'
          KeyType: 'HASH'
      GlobalSecondaryIndexes:
        - IndexName: 'LongUrl'
          KeySchema:
            - AttributeName: 'longUrl'
              KeyType: HASH
          Projection:
            ProjectionType: ALL